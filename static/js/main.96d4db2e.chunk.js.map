{"version":3,"sources":["App.js","index.js"],"names":["App","state","time","Date","isClockVisible","clockName","Math","floor","random","makeNewRandomName","newName","console","log","setState","showClock","hiddenClock","this","timerID","setInterval","tick","toLocaleTimeString","clearInterval","hidden","show","changeName","className","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uMA0FeA,G,kNArFbC,MAAQ,CACNC,KAAM,IAAIC,KACVC,gBAAgB,EAChBC,UAAWC,KAAKC,MAAM,EAAAD,KAAKE,UAAuB,G,EAiBpDC,kBAAoB,WAClB,IAAMC,EAAUJ,KAAKC,MAAM,EAAAD,KAAKE,UAAuB,EAGvDG,QAAQC,IAAR,qCAA0C,EAAKX,MAAMI,UAArD,eAAqEK,IAErE,EAAKG,SAAS,CAAER,UAAWK,K,EAG7BI,UAAY,WACV,EAAKD,SAAS,CAAET,gBAAgB,K,EAGlCW,YAAc,WACZ,EAAKF,SAAS,CAAET,gBAAgB,K,kEA5Bb,IAAD,OAClBY,KAAKC,QAAUC,aAAY,WACrB,EAAKjB,MAAMG,iBACb,EAAKe,OAELR,QAAQC,IAAI,EAAKX,MAAMC,KAAKkB,yBAE7B,O,6CAIHC,cAAcL,KAAKC,W,6BAqBnBD,KAAKH,SAAS,CACZX,KAAM,IAAIC,S,+BAKZ,IAAMmB,EAASN,KAAKD,YACdQ,EAAOP,KAAKF,UACZU,EAAaR,KAAKP,kBAExB,OACE,yBAAKgB,UAAU,OACb,2CACA,uBACEH,QAASN,KAAKf,MAAMG,gBADtB,gBAIG,IACAY,KAAKf,MAAMC,KAAKkB,sBAGnB,8BACE,4BACEM,KAAK,SACLC,QAASJ,GAFX,cAMA,4BACEG,KAAK,SACLC,QAASL,GAFX,cAMA,4BACEI,KAAK,SACLC,QAASH,GAFX,yB,GAzEQI,IAAMC,YCAxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.96d4db2e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    time: new Date(),\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * (10 - 1)) + 1,\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => {\n      if (this.state.isClockVisible) {\n        this.tick();\n        // eslint-disable-next-line\n        console.log(this.state.time.toLocaleTimeString());\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  makeNewRandomName = () => {\n    const newName = Math.floor(Math.random() * (10 - 1)) + 1;\n\n    // eslint-disable-next-line\n    console.log(`The Clock was renamed from ${this.state.clockName} to ${newName}`);\n\n    this.setState({ clockName: newName });\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hiddenClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  tick() {\n    this.setState({\n      time: new Date(),\n    });\n  }\n\n  render() {\n    const hidden = this.hiddenClock;\n    const show = this.showClock;\n    const changeName = this.makeNewRandomName;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p\n          hidden={!this.state.isClockVisible}\n        >\n          Current time:\n          {' '}\n          {this.state.time.toLocaleTimeString()}\n        </p>\n\n        <form>\n          <button\n            type=\"button\"\n            onClick={show}\n          >\n            Show Clock\n          </button>\n          <button\n            type=\"button\"\n            onClick={hidden}\n          >\n            Hide Clock\n          </button>\n          <button\n            type=\"button\"\n            onClick={changeName}\n          >\n            Set random name\n          </button>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}